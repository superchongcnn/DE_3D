import open3d as o3d
import numpy as np

def depth_to_point_cloud(depth_map, fx=500, fy=500, cx=128, cy=128):
    h, w = depth_map.shape
    points = []

    for v in range(h):
        for u in range(w):
            z = depth_map[v, u] * 10.0  # 归一化深度转换为实际尺度
            if z > 0:
                x = (u - cx) * z / fx
                y = (v - cy) * z / fy
                points.append([x, y, z])

    return np.array(points)

# 生成点云
point_cloud = depth_to_point_cloud(depth_result)
pcd = o3d.geometry.PointCloud()
pcd.points = o3d.utility.Vector3dVector(point_cloud)

# 可视化
o3d.visualization.draw_geometries([pcd])
